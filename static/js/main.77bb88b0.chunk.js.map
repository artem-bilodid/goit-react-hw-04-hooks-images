{"version":3,"sources":["components/button/button.jsx","components/image-gallery-item/image-gallery-item.jsx","components/modal/modal.jsx","components/image-gallery/image-gallery.jsx","components/loader/loader.jsx","components/search-bar/search-bar.jsx","util/api-client.js","components/app/app.jsx","reportWebVitals.js","index.js"],"names":["Button","onClick","type","className","ImageGalleryItem","id","src","alt","modalRoot","document","getElementById","Modal","tags","onClose","useEffect","handleESCButtonClose","event","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","ImageGallery","images","useState","isModalOpen","setIsModalOpen","itemId","setItemId","toggleModal","handleItemClick","modalImage","find","image","Number","imageSrc","largeImageURL","imageTags","galleryItems","map","webformatURL","Loader","props","color","height","width","timeout","SearchBar","onSubmit","query","setQuery","preventDefault","trimmedQuery","trim","onChange","value","autoComplete","autoFocus","placeholder","getImagesResponse","page","a","url","fetch","response","ok","Promise","reject","Error","statusText","json","parsedData","console","log","App","setPage","totalHits","setTotalHits","setImages","isLoading","setIsLoading","fetchImages","getImages","hits","prevImages","concat","error","then","scrollTo","top","documentElement","scrollHeight","behavior","handleSearchFormSubmit","newQuery","shouldShowLoadButton","length","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77bb88b0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ id, src, alt, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img id={id} src={src} alt={alt} onClick={onClick} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ src, tags, onClose }) => {\n  useEffect(() => {\n    const handleESCButtonClose = event => {\n      if (event.code !== 'Escape') return;\n      onClose();\n    };\n\n    window.addEventListener('keydown', handleESCButtonClose);\n    return () => window.removeEventListener('keydown', handleESCButtonClose);\n  }, [onClose]);\n\n  const handleClose = event => {\n    if (event.target !== event.currentTarget) return;\n    onClose();\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleClose}>\n      <div className=\"Modal\">\n        <img src={src} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import ImageGalleryItem from '../image-gallery-item';\nimport Modal from '../modal';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [itemId, setItemId] = useState(null);\n\n  const toggleModal = () => {\n    setIsModalOpen(isModalOpen => !isModalOpen);\n  };\n\n  const handleItemClick = event => {\n    const { id } = event.currentTarget;\n    setItemId(id);\n    toggleModal();\n  };\n\n  const modalImage = images?.find(image => image.id === Number(itemId));\n  const imageSrc = modalImage?.largeImageURL;\n  const imageTags = modalImage?.tags;\n\n  const galleryItems = images.map(({ id, webformatURL, tags }) => (\n    <ImageGalleryItem key={id} id={id} src={webformatURL} alt={tags} onClick={handleItemClick} />\n  ));\n\n  return (\n    <>\n      <ul className=\"ImageGallery\">{galleryItems}</ul>\n      {isModalOpen && <Modal onClose={toggleModal} src={imageSrc} alt={imageTags} />}\n    </>\n  );\n};\n\nImageGallery.propTypes = { images: PropTypes.array.isRequired };\n\nexport default ImageGallery;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ReactLoader from 'react-loader-spinner';\n\nconst Loader = props => {\n  return (\n    <ReactLoader\n      className=\"Loader\"\n      type=\"TailSpin\"\n      color=\"#303f9f\"\n      height={50}\n      width={50}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const trimmedQuery = query.trim();\n\n    onSubmit(trimmedQuery);\n  };\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setQuery(value);\n  };\n\n  return (\n    <header className=\"Searchbar\" onSubmit={handleSubmit}>\n      <form className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default SearchBar;\n","const BASE_URL = 'https://pixabay.com/api';\nconst KEY = '23157120-208317e5fddd4920b074585fd';\nconst PAGE_SIZE = 12;\n\nconst getImagesResponse = async (page, query) => {\n  try {\n    const url = `${BASE_URL}/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${PAGE_SIZE}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      return Promise.reject(new Error(response.statusText));\n    }\n\n    const parsedData = await response.json();\n    return parsedData;\n  } catch (error) {\n    console.log('error', error);\n  }\n};\n\nexport { getImagesResponse as getImages };\n","import { useEffect, useState } from 'react';\nimport Button from '../button';\nimport ImageGallery from '../image-gallery';\nimport Loader from '../loader';\nimport SearchBar from '../search-bar';\nimport { getImages } from '../../util/api-client';\n\nconst App = () => {\n  const [page, setPage] = useState(1);\n  const [totalHits, setTotalHits] = useState(0);\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const setInitialState = () => {\n    setPage(1);\n    setTotalHits(0);\n    setQuery('');\n    setImages([]);\n    setIsLoading(false);\n  };\n\n  const fetchImages = async (page, query) => {\n    if (!query) return;\n\n    setIsLoading(true);\n    try {\n      const { hits, totalHits } = await getImages(page, query);\n      setImages(prevImages => prevImages.concat(hits));\n      setTotalHits(totalHits);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages(page, query).then(() => {\n      if (page !== 1) {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }, [query, page]);\n\n  const handleSearchFormSubmit = async newQuery => {\n    if (query === newQuery) return;\n    setInitialState();\n    setQuery(newQuery);\n  };\n\n  const handleLoadMoreButtonClick = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const shouldShowLoadButton = images.length < totalHits;\n  return (\n    <div className=\"App\">\n      <SearchBar onSubmit={handleSearchFormSubmit} />\n      <ImageGallery images={images} />\n      {isLoading && <Loader />}\n      {shouldShowLoadButton && <Button onClick={handleLoadMoreButtonClick} />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}